--- a/core/includewindows.h
+++ b/core/includewindows.h
@@ -11,6 +11,36 @@
 
 #include <windows.h>
 
+// Fix for clang-cl on Windows ARM64: Windows SDK uses stricter type signatures
+// for Interlocked* functions on ARM64 (unsigned int*) vs x64 (long*).
+// MSVC allows implicit conversions, but clang-cl enforces strict type checking.
+// These wrappers provide the necessary casts for compatibility.
+#if defined(_M_ARM64) && defined(__clang__)
+#undef InterlockedIncrement
+#undef InterlockedDecrement
+#undef InterlockedExchangeAdd
+#undef InterlockedCompareExchange
+#undef InterlockedExchange
+
+#define InterlockedIncrement(ptr) \
+    _InterlockedIncrement((volatile unsigned int*)(ptr))
+
+#define InterlockedDecrement(ptr) \
+    _InterlockedDecrement((volatile unsigned int*)(ptr))
+
+#define InterlockedExchangeAdd(ptr, val) \
+    _InterlockedExchangeAdd((volatile unsigned int*)(ptr), (unsigned int)(val))
+
+#define InterlockedCompareExchange(ptr, exchange, comparand) \
+    _InterlockedCompareExchange((volatile unsigned int*)(ptr), (unsigned int)(exchange), (unsigned int)(comparand))
+
+#define InterlockedExchange(ptr, val) \
+    _InterlockedExchange((volatile unsigned int*)(ptr), (unsigned int)(val))
+
+#define InterlockedExchangePointer(ptr, val) \
+    _InterlockedExchangePointer((void* volatile*)(ptr), (void*)(val))
+#endif
+
 #ifdef _MSC_VER
 #pragma warning(pop)
 #endif
--- a/core/rrbighash.cpp
+++ b/core/rrbighash.cpp
@@ -12,7 +12,7 @@
 
 OODLE_NS_START
 
-#ifdef __RADNT__
+#if defined(__RADNT__) && defined(__RADX86__)
 #ifndef __RADSSE2__
 #error SSE2 !!
 #endif
