name: Build

on:
  workflow_run:
    workflows: [Gitdeps]
    types: [completed]

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        configure-preset: [msvc, clang-cl]
        build-preset: [debug, release]
        include:
        - configure-preset: clang-cl
          llvm-version: "15.0.0"

    runs-on: ${{matrix.os}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache LLVM and Clang
      id: cache-llvm
      if: ${{ matrix.configure-preset == 'clang-cl' }}
      uses: actions/cache@v3
      with:
        path: C:/Program Files/LLVM
        key: ${{ runner.os }}-llvm-${{matrix.llvm-version}}

    - name: Install LLVM and Clang
      if: ${{ matrix.configure-preset == 'clang-cl' }}
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: ${{matrix.llvm-version}}
        force-version: true
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Run Vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitCommitId: '1370b2c88f1e683c5c6a2465133eaa9a9b3ee679'
        vcpkgJsonGlob: 'build/vcpkg.json'

    - name: Run CMake
      uses: lukka/run-cmake@v10
      with:
        cmakeListsTxtPath: 'build/CMakeLists.txt'
        configurePreset: '${{matrix.configure-preset}}'
        buildPreset: '${{matrix.configure-preset}}-${{matrix.build-preset}}'

    - name: Zip Artifacts
      shell: pwsh
      run: |
        python zip_artifacts.py '${{github.workspace}}/build/builds/${{matrix.configure-preset}}' '${{matrix.configure-preset}}-${{matrix.build-preset}}.zip'

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.configure-preset}}-${{matrix.build-preset}}
        path: ${{matrix.configure-preset}}-${{matrix.build-preset}}.zip
